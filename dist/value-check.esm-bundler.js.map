{"version":3,"file":"value-check.esm-bundler.js","sources":["../src/rules.ts","../src/check.ts","../src/check_ext.ts"],"sourcesContent":["\nexport type CheckRuleBaseType = string | number | null\n\nexport class CheckRules {\n  static readonly GRAMMAR = /^#(o|m|b|i|f|s|a|O)(\\*.+)?(,\\d+)?$/\n  static readonly OP_OPTIONAL = 'o'\n  static readonly OP_METHOD = 'm'\n  static readonly OP_BOOLEAN = 'b'\n  static readonly OP_INT = 'i'\n  static readonly OP_FLOAT = 'f'\n  static readonly OP_STRING = 's'\n  static readonly OP_ARRAY = 'a'\n  static readonly OP_OBJECT = 'O'\n\n  static readonly IS_OPTIONAL = `|#${CheckRules.OP_OPTIONAL}|`\n\n  static readonly IS_IN_ARRAY = `#${CheckRules.OP_METHOD}*inArr,$`\n\n  static readonly IS_IN_OBJECT_KEY = `${CheckRules.OP_METHOD}*inObjKey,$`\n\n  static readonly IS_BOOLEAN = `|#${CheckRules.OP_BOOLEAN}|`\n\n  static readonly IS_INT = `|#${CheckRules.OP_INT}|`\n  static readonly IS_INT_POSITIVE_0 = `|#${CheckRules.OP_INT}*>=0|`\n  static readonly IS_INT_ID = `|#${CheckRules.OP_INT}*>0|`\n\n  static readonly IS_FLOAT = `|#${CheckRules.OP_FLOAT}|`\n  static readonly IS_FLOAT_POSITIVE = `|#${CheckRules.OP_FLOAT}*>=0|`\n\n  static readonly IS_STRING = `|#${CheckRules.OP_STRING}|`\n  static readonly IS_STRING_BASE64 = `|#${CheckRules.OP_STRING}*64|`\n  static readonly IS_STRING_JSON = `|#${CheckRules.OP_STRING}*json|`\n  static readonly IS_STRING_MD5 = `|#${CheckRules.OP_STRING}*md5|`\n  static readonly IS_STRING_DATE = `|#${CheckRules.OP_STRING}*d|`\n  static readonly IS_STRING_DATETIME = `|#${CheckRules.OP_STRING}*dt|`\n  protected static readonly IS_STRING_SPECIFIED_LEN = `|#${CheckRules.OP_STRING}*len,$|`\n  protected static readonly IS_STRING_MATCH_REGEX = `|#${CheckRules.OP_STRING}*regex,$|`\n\n  static readonly IS_ARRAY = `|#${CheckRules.OP_ARRAY}|`\n  protected static readonly IS_ARRAY_SUBSET = `|#${CheckRules.OP_ARRAY}*sub,$|`\n  protected static readonly IS_ARRAY_CONTAINS_ALL = `|#${CheckRules.OP_ARRAY}*cont,$|`\n  protected static readonly IS_ARRAY_LENGTH = `|#${CheckRules.OP_ARRAY}*length,$|`\n\n  static readonly IS_OBJECT = `|#${CheckRules.OP_OBJECT}|`\n  protected static readonly IS_OBJECT_KEY_SUBSET = `|#${CheckRules.OP_OBJECT}*sub,$|`\n  protected static readonly IS_OBJECT_KEY_CONTAINS_ALL = `|#${CheckRules.OP_OBJECT}*cont,$|`\n\n  protected static buffedData: unknown[] = []\n  protected static saveBuffedData (data: unknown): number {\n    this.buffedData.push(data)\n    return this.buffedData.length\n  }\n\n  static wrap (type: string, data: unknown): string {\n    const id = this.saveBuffedData(data)\n    return type.replace('$', id.toString())\n  }\n\n  static inEnum (\n    e: unknown[] | Record<string, CheckRuleBaseType> | Record<number, CheckRuleBaseType>\n  ): string {\n    const w = Array.isArray(e) ? e : Object.keys(e).map(k => (e as any)[k])\n    return this.wrap(this.IS_IN_ARRAY, w)\n  }\n\n  static stringPregMatch (e: RegExp): string {\n    return this.wrap(this.IS_STRING_MATCH_REGEX, e)\n  }\n}\n","import { CheckRules } from './rules'\n\ntype BaseType = string | number | null\n\nexport type CheckRuleBase = string\nexport interface CheckRuleExt {\n  [key: string]: CheckRuleBase\n}\nexport type CheckRule = CheckRuleBase | CheckRuleExt\n\nexport type CheckRuleAliasName = string\nexport type CheckRuleAlias = Record<CheckRuleAliasName, CheckRule>\n\nexport type CheckData = {\n  rule: CheckRuleAliasName | CheckRule,\n  value: BaseType | Record<string, BaseType> | BaseType[]\n}\n\ntype ScopedRule = {\n  [scope: string]: {\n    [name: string]: CheckRule\n  }\n}\n\nfunction genScopeTree (scope: string): string[] {\n  const tmp = scope.split('/')\n  tmp.unshift('')\n  const ret: string[] = []\n  while (tmp.length > 0) {\n    ret.push(tmp.join('/'))\n    ret.pop()\n  }\n  ret.reverse()\n  return ret\n}\n\nexport class Check {\n  private static globalRules = new Map<string, CheckRule>()\n  static setGlobalRules (rules: CheckRuleAlias): void {\n    for (const key of Object.keys(rules)) {\n      this.globalRules.set(key, rules[key])\n    }\n  }\n\n  protected rules: ScopedRule = { '': {} }\n\n  constructor () {\n    Check.globalRules.forEach((rule, name) => {\n      this.rules[''][name] = rule\n    })\n  }\n\n  setRule (scope: string, name: string, rule: CheckRule): void {\n    this.rules[scope][name] = rule\n  }\n\n  async check (scope: string, data: CheckData[]): Promise<number[]> {\n    const alias: CheckRuleAlias = {}\n    const ret: number[] = []\n    for (const name of genScopeTree(scope)) {\n      if (this.rules[name]) {\n        Object.keys(this.rules[name]).forEach(n => {\n          alias[n] = this.rules[name][n]\n        })\n      }\n    }\n    for (const item of data) {\n      ret.push(await Check.do(alias, item))\n    }\n    return ret\n  }\n\n  private static async do (\n    alias: CheckRuleAlias,\n    item: CheckData\n  ): Promise<number> {\n    if (typeof item.value === 'string' ||\n      typeof item.value === 'number' ||\n      item.value === null ||\n      Array.isArray(item.value)\n    ) {\n      if (typeof item.rule === 'string') {\n        return this.process(alias, item.rule, item.value as BaseType)\n      }\n    } else {\n      if (typeof item.rule === 'object' &&\n        Object.keys(item.value as Record<string, BaseType>) ===\n        Object.keys(item.rule)\n      ) {\n        for (const name of Object.keys(item.value)) {\n          const r = await this.process(alias, item.rule[name], item.value[name])\n          if (r > 0) {\n            return r\n          }\n        }\n      }\n    }\n    return 0\n  }\n\n  protected static async process (\n    alias: CheckRuleAlias,\n    rule: CheckRuleBase,\n    value: BaseType | BaseType[]\n  ): Promise<number> {\n    if (Array.isArray(value)) {\n\n    } else {\n      const reg = new RegExp(CheckRules.GRAMMAR)\n      const [_, type, action, warp] = rule.matchAll(reg).next().value\n      switch (type) {\n        case CheckRules.IS_IN_ARRAY:\n          return 0\n      }\n    }\n    return 0\n  }\n}\n","import { Check, CheckRuleAlias } from './check'\nimport { CheckRules } from './rules'\n\nexport const extRules: CheckRuleAlias = {\n  username: CheckRules.stringPregMatch(/^[a-zA-Z0-9u4E00-u9FA5][a-zA-Z0-9u4E00-u9FA5\\-_]{3,31}$/),\n  password: CheckRules.stringPregMatch(/^[a-zA-Z0-9\\-`~!@#%$^&*()_+=[\\]{};':\",.<>]{4,64}$/),\n  mobile: CheckRules.stringPregMatch(/^1[3456789]\\d{11}$/),\n  smsCode: CheckRules.stringPregMatch(/^\\d{4}|\\d{6}$/)\n}\n\nCheck.setGlobalRules(extRules)\n"],"names":[],"mappings":"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"}