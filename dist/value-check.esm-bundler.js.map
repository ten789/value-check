{"version":3,"file":"value-check.esm-bundler.js","sources":["../src/rules.ts","../src/check.ts","../src/check_ext.ts"],"sourcesContent":["\nexport type CheckRuleBaseType = string | number | null\n\nexport class CheckRules {\n  static readonly GRAMMAR = /^#(o|m|b|i|f|s|a|O)(\\*.+)?(,\\d+)?$/\n  static readonly OP_OPTIONAL = 'o'\n  static readonly OP_METHOD = 'm'\n  static readonly OP_NULL = 'n'\n  static readonly OP_BOOLEAN = 'b'\n  static readonly OP_INT = 'i'\n  static readonly OP_FLOAT = 'f'\n  static readonly OP_STRING = 's'\n  static readonly OP_ARRAY = 'a'\n\n  static readonly IS_OPTIONAL = `|#${CheckRules.OP_OPTIONAL}|`\n\n  static readonly IS_IN_ARRAY = `#${CheckRules.OP_METHOD}*inArr,$`\n\n  static readonly IS_IN_OBJECT_KEY = `${CheckRules.OP_METHOD}*inObjKey,$`\n\n  static readonly IS_NULL = `|${CheckRules.OP_NULL}|`\n\n  static readonly IS_BOOLEAN = `|#${CheckRules.OP_BOOLEAN}|`\n\n  static readonly IS_INT = `|#${CheckRules.OP_INT}|`\n  static readonly IS_INT_POSITIVE_0 = `|#${CheckRules.OP_INT}*>=0|`\n  static readonly IS_INT_ID = `|#${CheckRules.OP_INT}*>0|`\n\n  static readonly IS_FLOAT = `|#${CheckRules.OP_FLOAT}|`\n  static readonly IS_FLOAT_POSITIVE = `|#${CheckRules.OP_FLOAT}*>=0|`\n\n  static readonly IS_STRING = `|#${CheckRules.OP_STRING}|`\n  static readonly IS_STRING_BASE64 = `|#${CheckRules.OP_STRING}*64|`\n  static readonly IS_STRING_JSON = `|#${CheckRules.OP_STRING}*json|`\n  static readonly IS_STRING_MD5 = `|#${CheckRules.OP_STRING}*md5|`\n  static readonly IS_STRING_DATE = `|#${CheckRules.OP_STRING}*d|`\n  static readonly IS_STRING_DATETIME = `|#${CheckRules.OP_STRING}*dt|`\n  protected static readonly IS_STRING_LENGTH = `|#${CheckRules.OP_STRING}*len,$|`\n  protected static readonly IS_STRING_MATCH_REGEX = `|#${CheckRules.OP_STRING}*regex,$|`\n\n  static readonly IS_ARRAY = `|#${CheckRules.OP_ARRAY}|`\n  protected static readonly IS_ARRAY_SUBSET = `|#${CheckRules.OP_ARRAY}*sub,$|`\n  protected static readonly IS_ARRAY_CONTAINS_ALL = `|#${CheckRules.OP_ARRAY}*cont,$|`\n  protected static readonly IS_ARRAY_LENGTH = `|#${CheckRules.OP_ARRAY}*len,$|`\n\n  // 占位 方便 index 快速非空判断\n  protected static buffedData: unknown[] = [null]\n  protected static saveBuffedData (data: unknown): number {\n    this.buffedData.push(data)\n    return this.buffedData.length\n  }\n\n  static getBuffedData (index: number): unknown {\n    return this.buffedData[index]\n  }\n\n  static wrap (type: string, data: unknown): string {\n    const id = this.saveBuffedData(data)\n    return type.replace('$', id.toString())\n  }\n\n  static inEnum (\n    e: unknown[] | Record<string, CheckRuleBaseType> | Record<number, CheckRuleBaseType>\n  ): string {\n    const w = Array.isArray(e) ? e : Object.keys(e).map(k => (e as any)[k])\n    return this.wrap(this.IS_IN_ARRAY, w)\n  }\n\n  static stringPregMatch (e: RegExp): string {\n    return this.wrap(this.IS_STRING_MATCH_REGEX, e)\n  }\n}\n","import { CheckRules } from './rules'\n\ntype TypeBase = string | number | null | []\ntype TypeObject = Record<string, TypeBase>\n\n// 单行能表示的规则\nexport type CheckRuleBase = string\n// Object类型的规则\nexport type CheckRuleObject = Record<string, CheckRuleBase>\nexport type CheckRule = CheckRuleBase | CheckRuleObject\n\nexport type CheckRuleAliasName = string\nexport type CheckRuleAlias = Record<CheckRuleAliasName, CheckRule>\n\nexport type CheckData = {\n  rule: CheckRuleAliasName | CheckRule,\n  value: TypeBase | TypeObject\n}\n\nexport type CheckResultBase = Record<string, boolean>\nexport type CheckResultObject = Record<string, Record<string, boolean>>\nexport type CheckResult = CheckResultBase | CheckResultObject\n\nexport const parseCheck = function (result: CheckResult): boolean {\n  for (const key of Object.keys(result)) {\n    if (typeof result[key] === 'object') {\n      if (!parseCheck(result[key] as CheckResult)) {\n        return false\n      }\n    } else {\n      if (!result[key]) {\n        return false\n      }\n    }\n  }\n  return true\n}\n\nexport class Check {\n  private static globalRules = new Map<string, CheckRule>()\n  static setGlobalRules (rules: CheckRuleAlias): void {\n    for (const key of Object.keys(rules)) {\n      this.globalRules.set(key, rules[key])\n    }\n  }\n\n  protected rules = new Map<string, CheckRule>()\n\n  constructor () {\n    Check.globalRules.forEach((rule, name) => {\n      this.rules.set(name, rule)\n    })\n  }\n\n  setRule (name: string, rule: CheckRule): void {\n    this.rules.set(name, rule)\n  }\n\n  async check (data: CheckData[]): Promise<CheckResult> {\n    const ret: CheckResult = {}\n    let objectIndex = 0\n    for (const item of data) {\n      if (typeof item.value === 'string' ||\n        typeof item.value === 'number' ||\n        item.value === null ||\n        Array.isArray(item.value)\n      ) {\n        if (typeof item.rule === 'string') {\n          ret[item.rule] = await Check.process(item.rule, item.value)\n        } else {\n          throw new Error('Check: Rule and Value type error.')\n        }\n      } else {\n        if (typeof item.rule === 'object' &&\n          typeof item.value === 'object' &&\n          Object.keys(item.value) === Object.keys(item.rule)\n        ) {\n          const tmp: Record<string, boolean> = {}\n          for (const name of Object.keys(item.value)) {\n            tmp[name] = await Check.process(item.rule[name], item.value[name])\n          }\n          ret[objectIndex.toString()] = tmp\n          objectIndex++\n        }\n      }\n    }\n    return ret\n  }\n\n  static async process (\n    rule: CheckRuleBase,\n    value: TypeBase,\n    recursion = true\n  ): Promise<boolean> {\n    const rules = rule.split('|').filter(Boolean)\n    for (const index in rules) {\n      const r = rules[index]\n      const [op, action, warp] = r.matchAll(CheckRules.GRAMMAR)\n        .next()\n        .value.slice(1) as string[]\n      switch (op) {\n        case CheckRules.OP_OPTIONAL:\n          if (typeof value === 'undefined') {\n            return true\n          }\n          break\n        case CheckRules.OP_NULL:\n          if (value === null) {\n            return true\n          }\n          break\n        case CheckRules.OP_BOOLEAN:\n          if (typeof value === 'boolean') {\n            return true\n          }\n          break\n        case CheckRules.OP_INT:\n          if (!await this.checkInt(value, action)) {\n            return false\n          }\n          break\n        case CheckRules.OP_FLOAT:\n          if (!await this.checkFloat(value, action)) {\n            return false\n          }\n          break\n        case CheckRules.OP_STRING:\n          if (!await this.checkString(value, action, parseInt(warp))) {\n            return false\n          }\n          break\n        case CheckRules.OP_ARRAY:\n          if (!recursion) {\n            return true\n          }\n          if (!await this.checkArray(value, action, parseInt(warp))) {\n            return false\n          }\n          for (const item of value as TypeBase[]) {\n            if (!await this.process(rule, item, false)) {\n              return false\n            }\n          }\n          break\n      }\n    }\n    return true\n  }\n\n  static async checkInt (\n    value: TypeBase,\n    action?: string\n  ): Promise<boolean> {\n    if (!(typeof value === 'number' && parseInt(value.toString()) === value)) {\n      return false\n    }\n    switch (action) {\n      case '>=0':\n        return value >= 0\n      case '>0':\n        return value > 0\n      default:\n        return true\n    }\n  }\n\n  static async checkFloat (\n    value: TypeBase,\n    action?: string\n  ): Promise<boolean> {\n    if (!(typeof value === 'number' && parseFloat(value.toString()) === value)) {\n      return false\n    }\n    switch (action) {\n      case '>=0':\n        return value >= 0\n      default:\n        return true\n    }\n  }\n\n  static async checkString (\n    value: TypeBase,\n    action?: string,\n    warp?: number\n  ): Promise<boolean> {\n    if (typeof value !== 'string') {\n      return false\n    }\n    switch (action) {\n      case '64':\n        return /^[\\w+=]*$/.test(value)\n      case 'json':\n        try {\n          JSON.parse(value)\n          return true\n        } catch {\n          return false\n        }\n      case 'md5':\n        return /^[a-z0-9]{16}|[a-z0-9]{32}$/.test(value)\n      case 'd':\n        return /^\\d{1,4}-\\d{1,2}-\\d{1,2}$/.test(value)\n      case 'dt':\n        return /^\\d{1,4}-\\d{1,2}-\\d{1,2} \\d{1,2}:\\d{1,2}:\\d{1,2}$/.test(value)\n      case 'len':\n        return !!warp && value.length === CheckRules.getBuffedData(warp)\n      case 'regex':\n        try {\n          return !!warp && new RegExp(CheckRules.getBuffedData(warp) as string)\n            .test(value)\n        } catch {\n          return false\n        }\n      default:\n        return true\n    }\n  }\n\n  static async checkArray (\n    value: TypeBase,\n    action?: string,\n    warp?: number\n  ): Promise<boolean> {\n    if (!Array.isArray(value)) {\n      return false\n    }\n    switch (action) {\n      case 'len':\n        try {\n          return !!warp && value.length === CheckRules.getBuffedData(warp)\n        } catch {\n          return false\n        }\n      default:\n        return true\n    }\n  }\n}\n","import { Check, CheckRuleAlias } from './check'\nimport { CheckRules } from './rules'\n\nexport const extRules: CheckRuleAlias = {\n  username: CheckRules.stringPregMatch(/^[a-zA-Z0-9u4E00-u9FA5][a-zA-Z0-9u4E00-u9FA5\\-_]{3,31}$/),\n  password: CheckRules.stringPregMatch(/^[a-zA-Z0-9\\-`~!@#%$^&*()_+=[\\]{};':\",.<>]{4,64}$/),\n  mobile: CheckRules.stringPregMatch(/^1[3456789]\\d{11}$/),\n  smsCode: CheckRules.stringPregMatch(/^\\d{4}|\\d{6}$/)\n}\n\nCheck.setGlobalRules(extRules)\n"],"names":[],"mappings":"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"}